$selectionColor: rgb(255, 100, 0);
$selectionColorSoft: rgba(255, 100, 0, 0.2);
$selectionColorMedium: rgba(255, 100, 0, 0.5);
$hoverColor: rgb(255, 200, 0);
$hoverColorSoft: rgba(255, 200, 0, 0.2);
$hoverColorMedium: rgba(255, 200, 0, 0.5);
$transparentColor: rgba(0, 0, 0, 0);
$defaultFillColor: rgb(200, 200, 200);
$defaultStrokeColor: rgb(80, 80, 80);
$defaultFillColorFiltered: rgb(230, 230, 230);
$defaultStrokeColorFiltered: rgb(180, 180, 180);
$overlayFillColor: rgb(255, 255, 255);
$overlayStrokeColor: rgb(30, 30, 30);
$overlayHoverColor: rgb(150, 200, 255);

@mixin textIcon($fontSize) {
  font-family: FontAwesome, sans-serif;
  font-size: $fontSize;
  cursor: pointer;
  text-anchor: middle;
}

svg text::selection {
  background: none;
}

html, body {
  height: 100%;
}

body {
  margin: 0px;
}

text {
  text-anchor: left;
  font-family: sans-serif;
  cursor: default;
  font-size: 10px;
  fill: $defaultStrokeColor;
}

text.collapseIconSmall {
  @include textIcon(10px);
}

rect.filler {
  fill: $transparentColor;
}

g.node {
  rect {
    fill: $defaultFillColor;
    stroke: $defaultStrokeColor;
  }

  text {
    //    text-anchor: middle;
    font-size: 11px;
  }
}

g.node.filtered {
  rect {
    fill: $defaultFillColorFiltered;
    stroke: $defaultStrokeColorFiltered;
  }

  text {
    fill: $defaultStrokeColorFiltered;
  }

  path {
    stroke: $defaultStrokeColorFiltered;
  }
}

g.node.hovered {
  rect {
    fill: $hoverColor;
  }
}

g.node.path_hovered {
  rect {
    stroke: $hoverColor;
    stroke-width: 3px;
  }
}

g.node.selected {
  rect {
    fill: $selectionColor;
  }
}

g.node.path_selected {
  rect {
    stroke: $selectionColor;
    stroke-width: 3px;
  }
}

g.listItem {
  rect {
    fill: $overlayFillColor;
    stroke: $overlayFillColor;
  }

  text {
    font-size: 12px;
    fill: $overlayStrokeColor;
  }

  text.icon {
    @include textIcon(14px);
  }
}

g.listItem.hovered {
  rect {
    fill: $overlayHoverColor;
    stroke: $overlayFillColor;
  }

}

g.comboNode {
  text {
    text-anchor: middle;
    font-size: 11px;
    fill: $defaultStrokeColor;
  }
}

.comboNode.hovered {
  ellipse {
    fill: $hoverColor;
  }
}

.comboNode.selected {
  ellipse {
    fill: $selectionColor;
  }
}

rect.nodeType.hovered {
  fill: $hoverColor;
}

rect.nodeType.selected {
  fill: $selectionColor;
}

g.setNode {
  text {
    text-anchor: middle;
    font-size: 11px;
    fill: $defaultStrokeColor;
  }

  ellipse {
    fill: $defaultFillColor;
    stroke: $defaultStrokeColor;
  }
}

g.setNode.hovered {
  ellipse {
    fill: $hoverColor;
  }
}

g.setNode.selected {
  ellipse {
    fill: $selectionColor;
  }
}

g.edge {
  line {
    stroke: $defaultStrokeColor;
    stroke-width: 1.5px;
  }
}

g.overlayButton {
  text {
    @include textIcon(16px);
  }

  rect {
    fill: $overlayFillColor;
    stroke: $overlayStrokeColor;
    stroke-width: 1px;

  }
}

g.overlayButton.smallButton {
  text {
    font-size: 10px;
  }
}

g.stats.hovered, g.path.hovered {
  rect.filler {
    fill: $hoverColorSoft;
  }
}

g.stats.selected, g.path.selected {
  rect.filler {
    fill: $selectionColorSoft;
  }
}

g.set.hovered {
  text {
    fill: $hoverColor;
  }

  line {
    stroke: $hoverColor;
    //    stroke-width: 2px;
  }

  rect.filler {
    fill: $hoverColorSoft;
  }

  circle {
    fill: $hoverColor;
  }
}

g.set.selected {
  text {
    fill: $selectionColor;
  }

  line {
    stroke: $selectionColor;
    //    stroke-width: 2px;
  }

  rect.filler {
    fill: $selectionColorSoft;
  }

  circle {
    fill: $selectionColor;
  }
}

.edgePath path {
  stroke: $defaultStrokeColor;
  fill: $defaultStrokeColor;
  stroke-width: 1.5px;

}

.edgePath path.filtered {
  stroke: $defaultStrokeColorFiltered;
  fill: $defaultStrokeColorFiltered;
  stroke-width: 1.5px;
}

path.crossConnection, line.stub {
  stroke: $defaultFillColor;
  stroke-width: 5px;
}

path.crossConnection.hovered, line.stub.hovered {
  stroke: $hoverColorMedium;
  stroke-width: 5px;
}

path.crossConnection.selected, line.stub.selected {
  stroke: $selectionColorMedium;
  stroke-width: 5px;
}

.edgePath path.path_hovered {
  stroke: $hoverColor;
  fill: $hoverColor;
  //  stroke-width: 3px;
}

.edgePath path.path_selected {
  stroke: $selectionColor;
  fill: $selectionColor;
  //  stroke-width: 3px;

}

g.boxPlotAxisX, g.boxPlotAxisY {
  path, line {
    fill: none;
    stroke: $defaultStrokeColor;
    shape-rendering: crispEdges;
  }
}

.collapseIcon {
  font-family: FontAwesome;
  font-size: 16px;
  cursor: pointer;
  text-anchor: middle;
}

#arrowRight {
  stroke: $defaultStrokeColor;
  fill: $defaultStrokeColor;
}

#listView {
  padding: 5px;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  //  float: right;

  width: 100%;
  height: 100vh;
  //  -webkit-box-sizing: border-box;
  //  -moz-box-sizing: border-box;
  //  box-sizing: border-box;
}

path.nodeTypeSymbol {

  fill: none;
  stroke: $defaultStrokeColor;
  stroke-width: 1.5px;
}

.outer {

  -webkit-flex: 1;
  flex: 1;

  //  width: 45vw;
  //  position: absolute;
  //  height: 100%;
  overflow: auto;

  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-flex-flow: column wrap;
}

.inner {
  //  height: 100%;
  -webkit-flex: 1;
  flex: 1;

  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  -webkit-flex-flow: column wrap;
}

#leftCol {
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
  float: left;
  //  display: inline-block;
  width: 49%;
  height: 100vh;
  //  overflow: auto;
  vertical-align: top;
}

#rightCol {

  display: inline-block;
  width: 50%;
  height: 100vh;
  overflow: auto;
  vertical-align: top;
  float: right;
}

#overviewRow {
  //  overflow: auto;
  display: -webkit-flex;
  display: flex;
  flex-direction: row;
  //  height: 100%;

  -webkit-flex: 1;
  flex: 1;
  //  position:relative;
}

header {
  padding: 5px;
}

#pathgraph {
  -webkit-flex: 1 0 auto;
  flex: 1 0 auto;

  display: -webkit-flex;
  display: flex;
  flex-direction: row;
  -webkit-flex-flow: column wrap;
}

#pathlist, #pathstats, #pathQuery {
  display: block;
  width: 100%;
  height: 100%;
  margin: 0px;
  padding: 0px;
  border: 0px;
}

#pathGraphView {
  //  padding: 5px;
  display: inline-block;
  width: 74%;
  //  position: absolute;
  //  height: 100%;
  //  height: 500px;
  overflow: auto;
  vertical-align: top;
  display: -webkit-flex;
  display: flex;
  flex-direction: column;
}

#pathQueryView {
  display: inline-block;
  width: 100%;
  height: 120px;
  overflow: auto;
  vertical-align: top;
}

#query_interface {
  padding: 5px;
  display: inline-block;
  width: 100%;
  vertical-align: top;
}

#pathStatsView {
  padding: 5px;
  display: inline-block;
  width: 25%;
  //  position: absolute;
  //  height: 100%;
  //  height: 100%;
  overflow: auto;
  vertical-align: top;
  //  display: block;
  //  width: 100%;
  //  height: 100%;
}

#pathRankConfig, #aggregateRankConfig {
  display: inline-block;
}
